name: Build wheels for cli

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux manylinux
          - runner: ubuntu-22.04
            target: x86_64
            manylinux: auto
          - runner: ubuntu-22.04
            target: x86
            manylinux: auto
          - runner: ubuntu-22.04
            target: aarch64
            manylinux: auto
          - runner: ubuntu-22.04
            target: armv7
            manylinux: auto
          - runner: ubuntu-22.04
            target: s390x
            manylinux: auto
          - runner: ubuntu-22.04
            target: ppc64le
            manylinux: auto
          # Linux musllinux
          - runner: ubuntu-22.04
            target: x86_64
            manylinux: musllinux_1_2
          - runner: ubuntu-22.04
            target: x86
            manylinux: musllinux_1_2
          - runner: ubuntu-22.04
            target: aarch64
            manylinux: musllinux_1_2
          - runner: ubuntu-22.04
            target: armv7
            manylinux: musllinux_1_2
          # Windows
          - runner: windows-latest
            target: x64
            manylinux: ""
          - runner: windows-latest
            target: x86
            manylinux: ""
          # MacOS
          - runner: macos-13
            target: x86_64
            manylinux: ""
          - runner: macos-14
            target: aarch64
            manylinux: ""
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: ${{ matrix.manylinux }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.runner }}-${{ matrix.target }}${{ matrix.manylinux }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [build, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
