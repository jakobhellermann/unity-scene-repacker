/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct TypeTreeGeneratorHandle {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn TypeTreeGenerator_init(
        unity_version: *const ::std::os::raw::c_char,
        generator_name: *const ::std::os::raw::c_char,
    ) -> *mut TypeTreeGeneratorHandle;
}
unsafe extern "C" {
    pub fn TypeTreeGenerator_loadDLL(
        handle: *mut TypeTreeGeneratorHandle,
        dll_ptr: *const ::std::os::raw::c_uchar,
        dll_len: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn TypeTreeGenerator_getLoadedDLLNames(
        handle: *mut TypeTreeGeneratorHandle,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn TypeTreeGenerator_generateTreeNodesJson(
        handle: *mut TypeTreeGeneratorHandle,
        assembly_name: *const ::std::os::raw::c_char,
        full_name: *const ::std::os::raw::c_char,
        json_addr: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct TypeTreeNodeNative {
    pub m_Type: *mut ::std::os::raw::c_char,
    pub m_Name: *mut ::std::os::raw::c_char,
    pub m_Level: ::std::os::raw::c_int,
    pub m_MetaFlag: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of TypeTreeNodeNative"][::std::mem::size_of::<TypeTreeNodeNative>() - 24usize];
    ["Alignment of TypeTreeNodeNative"][::std::mem::align_of::<TypeTreeNodeNative>() - 8usize];
    ["Offset of field: TypeTreeNodeNative::m_Type"]
        [::std::mem::offset_of!(TypeTreeNodeNative, m_Type) - 0usize];
    ["Offset of field: TypeTreeNodeNative::m_Name"]
        [::std::mem::offset_of!(TypeTreeNodeNative, m_Name) - 8usize];
    ["Offset of field: TypeTreeNodeNative::m_Level"]
        [::std::mem::offset_of!(TypeTreeNodeNative, m_Level) - 16usize];
    ["Offset of field: TypeTreeNodeNative::m_MetaFlag"]
        [::std::mem::offset_of!(TypeTreeNodeNative, m_MetaFlag) - 20usize];
};
unsafe extern "C" {
    pub fn TypeTreeGenerator_generateTreeNodesRaw(
        handle: *mut TypeTreeGeneratorHandle,
        assembly_name: *const ::std::os::raw::c_char,
        full_name: *const ::std::os::raw::c_char,
        arr_addr: *mut *mut TypeTreeNodeNative,
        arr_length: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn TypeTreeGenerator_getMonoBehaviorDefinitions(
        handle: *mut TypeTreeGeneratorHandle,
        arr_addr: *mut *mut [*mut ::std::os::raw::c_char; 2usize],
        arr_length: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn TypeTreeGenerator_freeMonoBehaviorDefinitions(
        arr_addr: *mut [*mut ::std::os::raw::c_char; 2usize],
        arr_length: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn TypeTreeGenerator_del(handle: *mut TypeTreeGeneratorHandle) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn FreeCoTaskMem(ptr: *mut ::std::os::raw::c_void);
}
